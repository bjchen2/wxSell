#项目启动端口
server.port=8088
#数据库配置
spring.datasource.url=jdbc:mysql://服务器IP:端口/wx_sell?characterEncoding=utf8&useSSL=false
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=密码
#数据库连接池配置（需先在pom中引入druid数据库连接池）
#初始化连接池大小，最大连接数，最小连接数
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000

#显示JPA sql语句
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.format_sql=true

#mybatis有关配置
#显示mybatis sql语句
#logging.level.com.wxsell.domain.mapper = trace
#配置mapper扫描路径
mybatis.mapper-locations=classpath:mapper/*.xml

#项目路由前缀，如访问/list时需访问/sell/list
server.servlet.context-path=/sell

#微信公众平台有关配置
wechat.mpAppId = 微信公众号 AppId
wechat.mpAppSecret = 微信公众号 AppSecret
#以下字段是微信支付功能所需，认证商家公众号后，在微信支付的商户平台可获取.
# keyPath是在商家公众号页面下载的证书存放路径
# notifyUrl是异步接收微信支付结果通知的回调地址，通知url必须为外网可访问的url，不能携带参数
#详情见：https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1
wechat.mchId =
wechat.mchKey =
wechat.keyPath =
wechat.notifyUrl = http://192.168.1.103:8088/sell/pay/notify

#以下字段微信开放平台认证后可获取 ，是PC端后台管理第三方登录（微信扫码登录）所需,
wechat.openAppId =
wechat.openAppSecret =

#微信模板ID，模板推送使用,
# 用名为templateId的map接收，key为orderStatus的值即为lQvYfNL9Lk30e5CE03JOVTylPQc9lylVcOVW-ykAQac
# 通过该方法可以存储多个模板ID
wechat.templateId.orderStatus = lQvYfNL9Lk30e5CE03JOVTylPQc9lylVcOVW-ykAQac

#项目有关url,不能写成projectUrl，会报错
#规范名称应该是KEBAB案例（'-'分隔）
project-url.wechatMpAuthorize = http://192.168.1.103:8088
#建议：和平台配置的授权回调域相同即可
project-url.wechatOpenAuthorize = http://192.168.1.103:8088
project-url.sell = http://192.168.1.103:8088

#配置redis
spring.redis.host = 服务器IP
spring.redis.port = 6379
#没有密码可以不写该属性
spring.redis.password =
# 连接池最大连接数
spring.redis.jedis.pool.max-active=5000
# 连接池最大阻塞时间
#spring.redis.jedis.pool.max-wait=5000
# 连接池最大空闲连接数
spring.redis.jedis.pool.max-idle=30000
# 连接池最小空闲连接数
spring.redis.jedis.pool.min-idle=50
# 连接超时时间
#spring.redis.timeout=300000
